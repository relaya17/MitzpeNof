{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// הממשקים\n\n// מצב התחלתי\nconst initialState = {\n  posts: []\n};\n\n// יצירת ה-slice\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState,\n  reducers: {\n    addPost: (state, action) => {\n      const newPost = {\n        id: Date.now().toString(),\n        content: action.payload.content,\n        author: action.payload.author,\n        comments: []\n      };\n      state.posts.push(newPost);\n    },\n    addComment: (state, action) => {\n      const post = state.posts.find(p => p.id === action.payload.postId);\n      if (post) {\n        const newComment = {\n          id: Date.now().toString(),\n          text: action.payload.text,\n          author: action.payload.author\n        };\n        post.comments.push(newComment);\n      }\n    }\n  }\n});\nexport const {\n  addPost,\n  addComment\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","blogSlice","name","reducers","addPost","state","action","newPost","id","Date","now","toString","content","payload","author","comments","push","addComment","post","find","p","postId","newComment","text","actions","reducer"],"sources":["C:/Users/ארלט/Documents/Visual Studio 2022/MitzpeNof/MitzpeNof/MyNewProject/client/src/redux/slice/blogSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// הממשקים\r\ninterface Post {\r\n  id: string;\r\n  content: string;\r\n  author: string;\r\n  comments: Comment[];\r\n}\r\n\r\ninterface Comment {\r\n  id: string;\r\n  text: string;\r\n  author: string;\r\n}\r\n\r\ninterface BlogState {\r\n  posts: Post[];\r\n}\r\n\r\n// מצב התחלתי\r\nconst initialState: BlogState = {\r\n  posts: [],\r\n};\r\n\r\n// יצירת ה-slice\r\nconst blogSlice = createSlice({\r\n  name: 'blog',\r\n  initialState,\r\n  reducers: {\r\n    addPost: (state, action: PayloadAction<{ content: string; author: string }>) => {\r\n      const newPost: Post = {\r\n        id: Date.now().toString(),\r\n        content: action.payload.content,\r\n        author: action.payload.author,\r\n        comments: [],\r\n      };\r\n      state.posts.push(newPost);\r\n    },\r\n    addComment: (state, action: PayloadAction<{ postId: string; text: string; author: string }>) => {\r\n      const post = state.posts.find((p) => p.id === action.payload.postId);\r\n      if (post) {\r\n        const newComment: Comment = {\r\n          id: Date.now().toString(),\r\n          text: action.payload.text,\r\n          author: action.payload.author,\r\n        };\r\n        post.comments.push(newComment);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addPost, addComment } = blogSlice.actions;\r\nexport default blogSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;;AAE7D;;AAkBA;AACA,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA0D,KAAK;MAC9E,MAAMC,OAAa,GAAG;QACpBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,OAAO,EAAEN,MAAM,CAACO,OAAO,CAACD,OAAO;QAC/BE,MAAM,EAAER,MAAM,CAACO,OAAO,CAACC,MAAM;QAC7BC,QAAQ,EAAE;MACZ,CAAC;MACDV,KAAK,CAACL,KAAK,CAACgB,IAAI,CAACT,OAAO,CAAC;IAC3B,CAAC;IACDU,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAuE,KAAK;MAC9F,MAAMY,IAAI,GAAGb,KAAK,CAACL,KAAK,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,EAAE,KAAKF,MAAM,CAACO,OAAO,CAACQ,MAAM,CAAC;MACpE,IAAIH,IAAI,EAAE;QACR,MAAMI,UAAmB,GAAG;UAC1Bd,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;UACzBY,IAAI,EAAEjB,MAAM,CAACO,OAAO,CAACU,IAAI;UACzBT,MAAM,EAAER,MAAM,CAACO,OAAO,CAACC;QACzB,CAAC;QACDI,IAAI,CAACH,QAAQ,CAACC,IAAI,CAACM,UAAU,CAAC;MAChC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB,OAAO;EAAEa;AAAW,CAAC,GAAGhB,SAAS,CAACuB,OAAO;AACxD,eAAevB,SAAS,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}